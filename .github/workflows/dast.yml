name: Build, Test, and DAST

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build, Test, and DAST
    runs-on: ubuntu-latest

    services:
      markitos-common-postgres:
        image: postgres:16
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: markitos-svc-boilerplates
        ports:
          - 5432:5432
        options: >-
          --name markitos-common-postgres
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y curl wget tar

      - name: Run tests
        run: |
          make dropdb 2>&1 || true
          make createdb && \
          make testv
        env:
          DATABASE_DSN: "host=markitos-common-postgres user=admin password=admin dbname=markitos-svc-boilerplates sslmode=disable"
          PGUSER: admin
          PGPASSWORD: admin
          PGHOST: markitos-common-postgres
          PGDATABASE: markitos-svc-boilerplates

      - name: Install security tools
        run: make install-appsec-tools
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          ASK_FOR_SNYK_TOKEN_BYPASS: "true"

      - name: Run security analysis
        run: make security
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Build Docker image
        run: make image
        env:
          VERSION: ${{ github.sha }}

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            if docker exec markitos-common-postgres pg_isready -U admin > /dev/null 2>&1; then
              echo "PostgreSQL is ready!"
              exit 0
            fi
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done
          echo "PostgreSQL did not become ready in time."
          exit 1

      - name: Run Docker image
        run: make image-run
        env:
          DATABASE_DSN: "host=markitos-common-postgres user=admin password=admin dbname=markitos-svc-boilerplates sslmode=disable"
          HTTP_SERVER_ADDRESS: ":3000"
          GRPC_SERVER_ADDRESS: ":30000"
          VERSION: ${{ github.sha }}

      - name: Wait for application to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:3000 > /dev/null; then
              echo "Application is ready!"
              exit 0
            fi
            echo "Waiting for application to be ready..."
            sleep 2
          done
          echo "Application did not become ready in time."
          exit 1

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: 'http://localhost:3000'